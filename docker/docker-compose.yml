services:
  nginx:
    image: nginx:alpine
    ports:
      - 8080:8080
    volumes:
      - ./nginx/nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      indexing_service:
        condition: service_healthy
      query_service:
        condition: service_healthy
      frontend:
        condition: service_started
      opensearch:
        condition: service_healthy
    restart: on-failure
    labels:
      - traefik.docker.network=dokploy-network
      - traefik.http.routers.template-haystack-qwivzl-9-web.rule=Host(`template-haystack-qwivzl-f1124d-194-164-149-223.traefik.me`)
      - traefik.http.routers.template-haystack-qwivzl-9-web.entrypoints=web
      - traefik.http.services.template-haystack-qwivzl-9-web.loadbalancer.server.port=8081
      - traefik.http.routers.template-haystack-qwivzl-9-web.service=template-haystack-qwivzl-9-web
      - traefik.enable=true
    networks:
      - dokploy-network
  indexing_service:
    build:
      context: ./backend
      dockerfile: Dockerfile.indexing
    ports:
      - 8001:8001
    environment:
      - PYTHONUNBUFFERED=1
    env_file:
      - .env
    volumes:
      - file-storage:/app/files
      - ./backend/src/pipelines:/app/pipelines
    depends_on:
      opensearch:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8001/health
      interval: 10s
      timeout: 5s
      retries: 18
      start_period: 30s
  query_service:
    build:
      context: ./backend
      dockerfile: Dockerfile.query
    ports:
      - 8002:8002
    environment:
      - PYTHONUNBUFFERED=1
    env_file:
      - .env
    volumes:
      - file-storage:/app/files
      - ./backend/src/pipelines:/app/pipelines
    depends_on:
      opensearch:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8002/health
      interval: 10s
      timeout: 5s
      retries: 18
      start_period: 30s
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
      args:
        - REACT_APP_HAYSTACK_API_URL=${HAYSTACK_API_URL:-/api}
    ports:
      - 3030:3030
    volumes:
      - ./nginx/nginx-frontend.conf:/etc/nginx/conf.d/default.conf:ro
    restart: on-failure
  opensearch:
    image: opensearchproject/opensearch:2.18.0
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    ports:
      - 9200:9200
      - 9600:9600
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - --insecure
        - -u
        - ${OPENSEARCH_USER}:${OPENSEARCH_PASSWORD}
        - https://localhost:9200/_cluster/health
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure
    env_file:
      - .env
networks:
  default:
    name: haystack-app
  dokploy-network:
    external: true
volumes:
  opensearch-data: null
  file-storage: null
